# Compose minimal para correr la app localmente apuntando a Postgres de Render.
# En Render NO usarás este archivo; Render construye desde el Dockerfile y
# configura las variables de entorno en su panel.

services:
  java_app:
    container_name: conta_conmigo
    build: .              # Construye la imagen usando el Dockerfile del proyecto
    image: contaconmig-java-app:1.0.0
    ports:
      - "8080:8080"      # Expone la app en http://localhost:8080
    environment:
      # Provee CUALQUIERA de estas variables. El entrypoint se encarga del resto:
      # 1) URL de Render en formato postgres://...
      - RENDER_DATABASE_URL=${RENDER_DATABASE_URL:-}
      # 2) O bien URL JDBC directa (si prefieres ya convertirla):
      #- DATABASE_URL=${DATABASE_URL:-}
      # 3) Usuario/clave (si no vienen embebidos en la URL)
      #- DATABASE_USER=${DATABASE_USER:-}
      #- DATABASE_PASSWORD=${DATABASE_PASSWORD:-}
      # Alternativos: si Render te da user/pass por separado
      - RENDER_DATABASE_USER=${RENDER_DATABASE_USER:-}
      - RENDER_DATABASE_PASSWORD=${RENDER_DATABASE_PASSWORD:-}
      # Fuerza SSL para conexiones externas (Render). Déjalo en true.
      - RENDER_REQUIRE_SSL=${RENDER_REQUIRE_SSL:-true}
    restart: unless-stopped

# Nota:
# - Se eliminó el servicio de Postgres local para mantener esto minimalista y
#   porque al usar Render no lo necesitas. Si quieres Postgres local, crea un
#   compose.local.yaml aparte con un servicio postgres y apunta DATABASE_URL a él.